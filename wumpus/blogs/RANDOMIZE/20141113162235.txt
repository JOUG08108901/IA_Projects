My curNode: (1;1)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (2;1)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (3;1)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (4;1)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (5;1)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (5;1)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn left.
My curNode: (5;1)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (5;1)
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn right.
My curNode: (5;1)
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn right.
My curNode: (5;1)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (5;1)
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn right.
My curNode: (5;1)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (4;1)
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn left.
My curNode: (4;1)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (4;1)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn right.
My curNode: (4;1)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn right.
My curNode: (4;1)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (4;2)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (4;3)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (4;3)
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn left.
My curNode: (4;3)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (3;3)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (2;3)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (2;3)
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn left.
My curNode: (2;3)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (2;3)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn right.
My curNode: (2;3)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn right.
My curNode: (2;3)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (2;4)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (2;5)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (2;6)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (2;7) hasBreeze  hasStench 
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn right.
My curNode: (2;7) hasBreeze  hasStench 
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn right.
My curNode: (2;7) hasBreeze  hasStench 
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (2;6)
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn left.
My curNode: (2;6)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (2;6)
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn right.
My curNode: (2;6)
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn right.
My curNode: (2;6)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (1;6) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn left.
My curNode: (1;6) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (1;5)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (1;4)
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn right.
My curNode: (1;4)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (1;4)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn right.
My curNode: (1;4)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (1;5)
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn left.
My curNode: (1;5)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (1;5)
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn right.
My curNode: (1;5)
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn right.
My curNode: (1;5)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (2;5)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (3;5)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (4;5)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (5;5)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (5;5)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn left.
My curNode: (5;5)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (5;6)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (5;7)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (5;8)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (5;9)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (5;10) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn right.
My curNode: (5;10) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn right.
My curNode: (5;10) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (5;9)
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn left.
My curNode: (5;9)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (6;9) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn right.
My curNode: (6;9) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (6;8)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (6;7) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (6;6)
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn left.
My curNode: (6;6)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (7;6) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn right.
My curNode: (7;6) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (7;5)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (7;4)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (7;3)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (7;3)
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn left.
My curNode: (7;3)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (8;3)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (9;3)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (9;3)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn left.
My curNode: (9;3)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (9;4)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (9;4)
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn left.
My curNode: (9;4)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (9;4)
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn right.
My curNode: (9;4)
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn right.
My curNode: (9;4)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (10;4)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (10;4)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn left.
My curNode: (10;4)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (10;5)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (10;6)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (10;7)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (10;8)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (10;8)
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn left.
My curNode: (10;8)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (9;8)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (8;8)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (7;8) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn right.
My curNode: (7;8) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn right.
My curNode: (7;8) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (8;8)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn left.
My curNode: (8;8)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (8;9)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (8;10)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (8;10)
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn left.
My curNode: (8;10)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (7;10) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn left.
My curNode: (7;10) hasBreeze 
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (7;9)
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn left.
My curNode: (7;9)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (8;9)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (9;9)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn left.
My curNode: (9;9)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (9;10)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (9;10)
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn right.
My curNode: (9;10)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (10;10)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (10;10)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn left.
My curNode: (10;10)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (10;10)
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn left.
My curNode: (10;10)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (9;10)
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn left.
My curNode: (9;10)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (9;9)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (9;8)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (9;7)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (9;6)
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn right.
My curNode: (9;6)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (8;6)
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn left.
My curNode: (8;6)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (8;5)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn right.
My curNode: (8;5)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn right.
My curNode: (8;5)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (8;6)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (8;6)
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn right.
My curNode: (8;6)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (9;6)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (10;6)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (10;6)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn left.
My curNode: (10;6)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (10;7)
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn right.
My curNode: (10;7)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (10;7)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn left.
My curNode: (10;7)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (10;8)
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn right.
My curNode: (10;8)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (10;8)
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn right.
My curNode: (10;8)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (10;7)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (10;6)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (10;5)
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn left.
My curNode: (10;5)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (10;5)
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn right.
My curNode: (10;5)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (10;4)
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn right.
My curNode: (10;4)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (9;4)
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn left.
My curNode: (9;4)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (9;3)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (9;3)
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn right.
My curNode: (9;3)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (8;3)
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn left.
My curNode: (8;3)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (8;2)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (8;1)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (8;1)
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn left.
My curNode: (8;1)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (9;1)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (10;1)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (10;1)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn left.
My curNode: (10;1)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (10;2)
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn right.
My curNode: (10;2)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (10;2)
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn right.
My curNode: (10;2)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (10;1)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (10;1)
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn right.
My curNode: (10;1)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (9;1)
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn left.
My curNode: (9;1)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (9;1)
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn right.
My curNode: (9;1)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (8;1)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (7;1)
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn left.
My curNode: (7;1)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (7;1)
 I go to shortest Safe Path To Unvisited
My direction is: E
I turn left.
My curNode: (7;1)
 I go to shortest Safe Path To Unvisited
My direction is: E
New and last directions equals. I go forward.
My curNode: (8;1)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn left.
My curNode: (8;1)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (8;2)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (8;3)
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn left.
My curNode: (8;3)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (7;3)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (6;3)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (6;3)
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn left.
My curNode: (6;3)
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (6;3)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn right.
My curNode: (6;3)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn right.
My curNode: (6;3)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (6;4)
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn left.
My curNode: (6;4)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (5;4)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn right.
My curNode: (5;4)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (5;5)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (5;6)
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn left.
My curNode: (5;6)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (4;6)
 I go to shortest Safe Path To Unvisited
My direction is: N
I turn right.
My curNode: (4;6)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (4;7)
curNode has gold and i grab the gold.
My curNode: (4;7)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (4;8)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (4;9)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (4;10)
 I go to shortest Safe Path To Unvisited
My direction is: N
New and last directions equals. I go forward.
My curNode: (4;10)
 I go to shortest Safe Path To Unvisited
My direction is: W
I turn left.
My curNode: (4;10)
 I go to shortest Safe Path To Unvisited
My direction is: W
New and last directions equals. I go forward.
My curNode: (3;10) hasMoo 
Cannot deduce Supmuw's friendliness.
 I go to shortest Safe Path To Unvisited
My direction is: S
I turn left.
My curNode: (3;10) hasMoo 
Cannot deduce Supmuw's friendliness.
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (3;9) hasBreeze  hasMoo 
Cannot deduce Supmuw's friendliness.
 I go to shortest Safe Path To Unvisited
My direction is: S
New and last directions equals. I go forward.
My curNode: (3;8) hasStench  hasMoo 
Deduced that Supmuw is murderous. Y adjacent.
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: E
I turn left.
My curNode: (3;8) hasStench  hasMoo 
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: E
New and last directions equals. I go forward.
My curNode: (4;8)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: S
I turn right.
My curNode: (4;8)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: S
New and last directions equals. I go forward.
My curNode: (4;7)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: S
New and last directions equals. I go forward.
My curNode: (4;6)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: S
New and last directions equals. I go forward.
My curNode: (4;5)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: W
I turn right.
My curNode: (4;5)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: W
New and last directions equals. I go forward.
My curNode: (3;5)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: W
New and last directions equals. I go forward.
My curNode: (2;5)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: S
I turn left.
My curNode: (2;5)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: S
New and last directions equals. I go forward.
My curNode: (2;4)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: S
New and last directions equals. I go forward.
My curNode: (2;3)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: E
I turn left.
My curNode: (2;3)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: E
New and last directions equals. I go forward.
My curNode: (3;3)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: E
New and last directions equals. I go forward.
My curNode: (4;3)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: S
I turn right.
My curNode: (4;3)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: S
New and last directions equals. I go forward.
My curNode: (4;2)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: S
New and last directions equals. I go forward.
My curNode: (4;1)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: W
I turn right.
My curNode: (4;1)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: W
New and last directions equals. I go forward.
My curNode: (3;1)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: W
New and last directions equals. I go forward.
My curNode: (2;1)
I has gold and Supmuw not Friendly, i go home.
goDirection is IDLE. I go home
My direction is: W
New and last directions equals. I go forward.
My curNode: (1;1)
I has gold and Supmuw not Friendly, i go home.
I wants to leave and I am at entrance, climb out!
My curNode: (1;1)
I has gold and Supmuw not Friendly, i go home.
I wants to leave and I am at entrance, climb out!
